#
# Copyright (c) 1997, 2016, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

main.errors={0} errors
main.error={0} error
main.warnings={0} warnings
main.warning={0} warning

main.usage=Usage: javadoc [options] [packagenames] [sourcefiles] [@files]\n\
\  -overview <file>                 Read overview documentation from HTML file\n\
\  -public                          Show only public classes and members\n\
\  -protected                       Show protected/public classes and \n\
\                                   members (default)\n\
\  -package                         Show package/protected/public classes\n\
\                                   and members\n\
\  -private                         Show all classes and members\n\
\  --show-members:value             Specifies which members (fields, methods\n\
\                                   etc.) will be documented, where value can\n\
\                                   be one of "public", "protected", "package"\n\
\                                   or "private".\n\
\                                   Default is protected, will show public and\n\
\                                   protected members, "public" will show only\n\
\                                   public members, "package" will show public,\n\
\                                   protected and package members and \n\
\                                   "private" will show all  members\n\
\  --show-types:value               Specifies which types (classes, interfaces\n\
\                                   etc.) will be documented, where value can be\n\
\                                   one of "public", "protected", "package" or\n\
\                                   "private".\n\
\                                   Default is "protected", show public and\n\
\                                   protected types, "package" will show public,\n\
\                                   protected and package types and "private"\n\
\                                   will show all types\n\
\  --show-packages:value            Specifies which module's packages will be\n\
\                                   documented. Possible values are "exported"\n\
\                                   or "all" packages\n\
\  --show-module-contents:value     Specifies the documentation granularity of\n\
\                                   module declarations.\n\
\                                   Possible values are "api" or "all".\n\
\  --expand-requires:value          Instructs the tool to expand the "requires"\n\
\                                   module dependencies "public" expands all the\n\
\                                   "requires public" edges of the module graph.\n\
\                                   "all" expands all the "requires" edges of\n\
\                                   the module graph by default only the\n\
\                                   specified modules will be considered.\n\
\  -help                            Display command line options and exit\n\
\  --module m1, m2..                Document the specified module(s)\n\
\  -doclet <class>                  Generate output via alternate doclet\n\
\  -docletpath <path>               Specify where to find doclet class files\n\
\  --module-source-path <path>      Specify where to find input source files\n\
\                                   for multiple modules\n\
\  --upgrade-module-path <path>     Override location of upgradeable modules\n\
\  --module-path <path>, -p <path>  Specify where to find application modules\n\
\  --add-modules <module>(,<module>)*\n\
\                                   Root modules to resolve in addition to the\n\
\                                   initial modules,\n\
\                                   or all modules on the module path if\n\
\                                   <module> is ALL-MODULE-PATH.\n\
\  --limit-modules <module>(,<module>)*\n\
\                                   Limit the universe of observable modules\n\
\  --source-path <path>             Specify where to find source files\n\
\  -sourcepath <path>               Specify where to find source files\n\
\  --class-path <path>              Specify where to find user class files\n\
\  -classpath <path>                Specify where to find user class files\n\
\  -cp <path>                       Specify where to find user class files\n\
\  -exclude <pkglist>               Specify a list of packages to exclude\n\
\  -subpackages <subpkglist>        Specify subpackages to recursively load\n\
\  -breakiterator                   Compute first sentence with BreakIterator\n\
\  -bootclasspath <path>            Override location of platform class files\n\
\                                   used for non-modular releases\n\
\  --system <jdk>                   Override location of system modules used\n\
\                                   for modular releases.\n\
\  --release <release>              Provide source compatibility with\n\
\                                   specified release\n\
\  -source <release>                Provide source compatibility with\n\
\                                   specified release\n\
\  -extdirs <dirlist>               Override location of installed extensions\n\
\  -verbose                         Output messages about what Javadoc is doing\n\
\  -locale <name>                   Locale to be used, e.g. en_US or en_US_WIN\n\
\  -encoding <name>                 Source file encoding name\n\
\  -quiet                           Do not display status messages\n\
\  -J<flag>                         Pass <flag> directly to the runtime system\n\
\  -X                               Print a synopsis of nonstandard\n\
\                                   options and exit\n

main.usage.foot=\n\
GNU-style options may use '=' instead of whitespace to separate the name of an\n\
option from its value.\n

main.Xusage=\
\  -Xmaxerrs <number>               Set the maximum number of errors to print\n\
\  -Xmaxwarns <number>              Set the maximum number of warnings to print\n\
\  --add-exports <module>/<package>=<other-module>(,<other-module>)*\n\
\                                   Specify a package to be considered as exported\n\
\                                   from its defining module to additional modules,\n\
\                                   or to all unnamed modules if <other-module> is\n\
\                                   ALL-UNNAMED.\n\
\  --add-reads <module>=<other-module>(,<other-module>)*\n\
\                                   Specify additional modules to be considered as\n\
\                                   required by a given module. <other-module> may be\n\
\                                   ALL-UNNAMED to require the unnamed module.\n\
\  -Xmodule:<module-name>           Specify a module to which the classes being\n\
\                                   compiled belong.\n\
\  --patch-module <module>=<file>(:<file>)*\n\
\                                   Override or augment a module with classes\n\
\                                   and resources in JAR files or directories\n\
\  -Xold                            Invoke the legacy javadoc tool\n

main.Xusage.foot=\
These options are non-standard and subject to change without notice.

main.doclet.usage.header=Provided by the {0} doclet:

main.requires_argument=option {0} requires an argument.
main.invalid_flag=invalid flag: {0}
main.No_modules_packages_or_classes_specified=No modules, packages or classes specified.
main.module_not_found=module {0} not found.\n
main.cant.read=cannot read {0}
main.Loading_source_files_for_package=Loading source files for package {0}...
main.Loading_source_file=Loading source file {0}...
main.Building_tree=Constructing Javadoc information...
main.no_source_files_for_package=No source files for package {0}
main.package_not_found=Package {0} not found
main.fatal.error=fatal error
main.fatal.exception=fatal exception
main.out.of.memory=java.lang.OutOfMemoryError: Please increase memory.\n\
For example, on the JDK Classic or HotSpot VMs, add the option -J-Xmx\n\
such as -J-Xmx32m.
main.done_in=[done in {0} ms]
main.more_than_one_doclet_specified_0_and_1=More than one doclet specified ({0} and {1}).
main.doclet_could_not_set_location=Could not set location for {0}
main.doclet_no_classloader_found=Could not obtain classloader to load {0}
main.could_not_instantiate_class=Could not instantiate class {0}
main.doclet_class_not_found=Cannot find doclet class {0}
main.illegal_locale_name=Locale not available: {0}
main.malformed_locale_name=Malformed locale name: {0}
main.file_not_found=File not found: "{0}"
main.file_ignored=File ignored: "{0}" (not yet supported)
main.illegal_class_name=Illegal class name: "{0}"
main.illegal_package_name=Illegal package name: "{0}"
main.illegal_option_value=Illegal option value: "{0}"
main.release.bootclasspath.conflict=option {0} cannot be used together with -release
main.unsupported.release.version=release version {0} not supported
main.release.not.standard.file.manager=-release option specified, but the provided JavaFileManager is not a StandardJavaFileManager.
main.unknown.error=an unknown error has occurred
main.legacy_api=The old Doclet and Taglet APIs in the packages\n\
    com.sun.javadoc, com.sun.tools.doclets and their implementations\n\
    are planned to be removed in a future JDK release. These\n\
    components have been superseded by the new APIs in jdk.javadoc.doclet.\n\
    Users are strongly recommended to migrate to the new APIs.\n

javadoc.class_not_found=Class {0} not found.
javadoc.error=error
javadoc.warning=warning
javadoc.error.msg={0}: error - {1}
javadoc.warning.msg={0}: warning - {1}
javadoc.note.msg = {1}
javadoc.note.pos.msg= {0}: {1}
